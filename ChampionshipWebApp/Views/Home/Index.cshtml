  @using ChampionshipWebApp.Resources

@model List<Championship.Team>
@using Microsoft.AspNetCore.Authentication;
@using Microsoft.AspNetCore.Authentication.Cookies;
@using System.Security.Claims;

@{
    var userLanguage = User.Claims.FirstOrDefault(c => c.Type == "Language")?.Value ?? "en";
    System.Threading.Thread.CurrentThread.CurrentCulture = new System.Globalization.CultureInfo(userLanguage);
    System.Threading.Thread.CurrentThread.CurrentUICulture = System.Threading.Thread.CurrentThread.CurrentCulture;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Football League System</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <style>
        body {
            background-color: #f0f2f5;
            font-family: 'Roboto', sans-serif;
        }

        h1, h2 {
            font-weight: bold;
            color: #343a40;
        }

        .btn-primary, .btn-secondary {
            font-size: 1.1em;
            padding: 12px 25px;
            border-radius: 8px;
            transition: background-color 0.3s ease, transform 0.3s ease;
        }

            .btn-primary:hover, .btn-secondary:hover {
                transform: scale(1.05);
                background-color: #0056b3;
            }

        .container {
            margin-top: 40px;
            background-color: white;
            padding: 40px;
            border-radius: 15px;
            box-shadow: 0 8px 16px rgba(0,0,0,0.2);
        }

        .table {
            background-color: white;
            border-radius: 10px;
            box-shadow: 0 6px 12px rgba(0,0,0,0.1);
        }

            .table th {
                background-color: #495057;
                color: white;
                border: none;
            }

            .table td, .table th {
                padding: 16px;
                vertical-align: middle;
                border-bottom: 1px solid #dee2e6;
            }

        .table-hover tbody tr:hover {
            background-color: #f1f1f1;
        }

        .modal-header {
            background-color: #343a40;
            color: white;
        }

        .modal-content {
            border-radius: 12px;
        }

        .form-control {
            border-radius: 6px;
        }

        .btn-warning, .btn-danger {
            transition: transform 0.3s ease;
        }

            .btn-warning:hover, .btn-danger:hover {
                transform: scale(1.05);
            }

        .alert-warning {
            background-color: #fff3cd;
            color: #856404;
            border-radius: 12px;
            box-shadow: 0 6px 12px rgba(0,0,0,0.1);
        }

        .dropdown-menu {
            font-size: 1.1em;
        }

        .custom-cancel-btn {
            font-size: 0.8em;
            padding: 10px 12px;
            margin-right: 10px;
        }

        .btn.account {
            position: absolute;
            top: 20px;
            left: 20px;
        }
    </style>
</head>


<body>

    <!-- Modale per la modifica della lingua e della password -->
    <div class="modal fade" id="languageModal" tabindex="-1" role="dialog" aria-labelledby="languageModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="languageModalLabel">@string.Format(Resources.LoginTitle)</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="languageForm">
                        <div class="form-group">
                            <label for="languageSelect">@string.Format(Resources.SelectLanguage)</label>
                            <select class="form-control" id="languageSelect" name="language" required>
                                <option value="" disabled selected>@string.Format(Resources.SelectLanguage)</option>
                                <option value="en">@string.Format(Resources.English)</option>
                                <option value="it">@string.Format(Resources.Italian)</option>
                                <option value="fr">@string.Format(Resources.French)</option>

                            </select>
                        </div>

                        <div class="form-group">
                            <label for="newPassword">@string.Format(Resources.NewPassword)</label>
                            <input type="password" maxlength="20" pattern="[^ ]+" title="Non sono ammessi spazi" class="form-control" id="newPassword" name="newPassword" placeholder="@string.Format(Resources.EnterNewPassword)" />

                        </div>

                        <button type="button" class="btn btn-secondary" data-dismiss="modal">@string.Format(Resources.CancelButton)</button>
                        <button type="submit" class="btn btn-primary">@string.Format(Resources.SaveChanges)</button>
                    </form>
                </div>
            </div>
        </div>
    </div>


    <div class="container">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                @if (User.Identity.IsAuthenticated)
                {
                    <h5>@string.Format(Resources.WelcomeMessage, User.Identity.Name)</h5>

                    <!-- Bottone per aprire il modale per la modifica dell'account -->
                    <button type="button" class="btn btn-info" data-toggle="modal" data-target="#languageModal">
                        @string.Format(Resources.EditAccount)
                    </button>
                }
            </div>

            <div>
                @if (User.Identity.IsAuthenticated)
                {
                    <form action="/Account/Logout" method="post">
                        <button type="submit" class="btn btn-outline-danger">@string.Format(Resources.Logout)</button>
                    </form>
                }
            </div>
        </div>
        <h1 class="text-center">@string.Format(Resources.FootballLeague)</h1>

        <div class="d-flex justify-content-center mt-4">
            <a href="@Url.Action("AddTeams","Teams")" class="btn btn-primary me-3">@string.Format(Resources.AddTeams)</a>
            <a href="/Teams/ViewCalendar" class="btn btn-secondary">@string.Format(Resources.GenerateCalendar)</a>
        </div>

        @if (Model != null && Model.Count > 0)
        {
            <h2 class="mt-5 text-center">@string.Format(Resources.ListOfTeams)</h2>
            <table class="table table-hover mt-3">
                <thead>
                    <tr>
                        <th>@string.Format(Resources.SquadName)</th>
                        <th>@string.Format(Resources.FoundationYear)</th>
                        <th>@string.Format(Resources.City)</th>
                        <th>@string.Format(Resources.ColorOfClub)</th>
                        <th>@string.Format(Resources.StadiumName)</th>
                        <th class="text-center">@string.Format(Resources.Actions)</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var team in Model)
                    {
                        <tr>
                            <td>@team.SquadName</td>
                            <td>@team.FondationYear</td>
                            <td>@team.City</td>
                            <td>@team.ColorOfClub</td>
                            <td>@team.StadiumName</td>
                            <td class="text-center">
                                <button class="btn btn-warning btn-sm" onclick="openEditModal('@team.Id', '@team.SquadName', '@team.FondationYear', '@team.City', '@team.ColorOfClub', '@team.StadiumName')">@string.Format(Resources.EditTeam)</button>
                                <form id="deleteForm-@team.Id" action="/Teams/Delete" method="post" style="display:inline;">
                                    <input type="hidden" name="squadName" value="@team.SquadName" />
                                    <button type="button" class="btn btn-danger btn-sm" onclick="openDeleteModal('@team.Id', '@team.SquadName')">
                                        @string.Format(Resources.DeleteButton)
                                    </button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="alert alert-warning text-center mt-5" role="alert">
                @string.Format(Resources.NoTeamsMessage)
            </div>
        }
    </div>

    <!-- Modal per la modifica delle informazioni della squadra -->
    <div class="modal fade" id="teamEditModal" tabindex="-1" role="dialog" aria-labelledby="teamEditModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="teamEditModalLabel">@string.Format(Resources.EditTeam)</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form id="editForm" action="/Teams/Edit" method="post">
                        <input type="hidden" id="EditTeamId" name="Id" />
                        <div class="form-group">
                            <label for="EditSquadName">@string.Format(Resources.SquadName)</label>
                            <input type="text" class="form-control" id="EditSquadName" name="SquadName" readonly />
                        </div>
                        <div class="form-group">
                            <label for="EditFondationYear">@string.Format(Resources.FoundationYear)</label>
                            <input type="number" class="form-control" id="EditFondationYear" name="FondationYear" required max="@DateTime.Now.Year" />
                        </div>
                        <div class="form-group">
                            <label for="EditCity">@string.Format(Resources.City)</label>
                            <input type="text" class="form-control" id="EditCity" name="City" maxlength="20" required pattern="^(?! )[a-zA-Z0-9]+( [a-zA-Z0-9]+)*(?<! )$" required />
                        </div>
                        <div class="form-group">
                            <label for="EditColorOfClub">@string.Format(Resources.ColorOfClub)</label>
                            <input type="text" class="form-control" id="EditColorOfClub" name="ColorOfClub" maxlength="40" required pattern="^(?! )[a-zA-Z0-9]+( [a-zA-Z0-9]+)*(?<! )$" required />
                        </div>
                        <div class="form-group">
                            <label for="EditStadiumName">@string.Format(Resources.StadiumName)</label>
                            <input type="text" class="form-control" id="EditStadiumName" name="StadiumName" maxlength="20" required pattern="^(?! )[a-zA-Z0-9]+( [a-zA-Z0-9]+)*(?<! )$" required />
                        </div>
                        <button type="button" class="btn btn-secondary custom-cancel-btn" onclick="resetEditForm()">@string.Format(Resources.DeleteChanges)</button>
                        <button type="submit" class="btn btn-primary">@string.Format(Resources.SaveChanges)</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Modal per la cancellazione -->
    <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="deleteModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="deleteModalLabel">@string.Format(Resources.ConfirmDelete)</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>

                </div>
                <div class="modal-body">
                    <p>@string.Format(Resources.DeleteMessage)</p>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">@string.Format(Resources.CancelButton)</button>
                    <form id="confirmDeleteForm" action="/Teams/Delete" method="post" style="display:inline;">
                        <input type="hidden" name="id" id="confirmDeleteTeamId" />
                        <button type="submit" class="btn btn-danger">@string.Format(Resources.DeleteButton)</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

    <script>
        $(document).ready(function () {
            $('#languageForm').on('submit', function (e) {
                e.preventDefault();
                var selectedLanguage = $('#languageSelect').val();
                var newPassword = $('#newPassword').val(); // Aggiungi questa linea

                $.ajax({
                    type: 'POST',
                    url: '/Account/ChangeLanguage', // endpoint da creare nel controller
                    data: { language: selectedLanguage, newPassword: newPassword }, // Includi la nuova password nei dati
                    success: function (response) {
                        // Ricarica la pagina per riflettere i cambiamenti
                        location.reload();
                    },
                    error: function (error) {
                        console.error("Error:", error);
                        alert('@string.Format(Resources.ChangeLanguage)');
                    }
                });
            });
        });


        function openEditModal(id, name, year, city, color, stadium) {
            $('#EditTeamId').val(id);
            $('#EditSquadName').val(name);
            $('#EditFondationYear').val(year);
            $('#EditCity').val(city);
            $('#EditColorOfClub').val(color);
            $('#EditStadiumName').val(stadium);
            $('#teamEditModal').modal('show');
        }

        function openDeleteModal(id) {
            $('#confirmDeleteTeamId').val(id);  // Usa l'ID della squadra
            $('#deleteModal').modal('show');
        }

        function resetEditForm() {
            // Cancella i campi tranne il nome della squadra
            document.getElementById("EditFondationYear").value = '';
            document.getElementById("EditCity").value = '';
            document.getElementById("EditColorOfClub").value = '';
            document.getElementById("EditStadiumName").value = '';
        }
    </script>
</body>
</html>








































































































